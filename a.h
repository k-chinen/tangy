#ifndef _TANGY_A_H_
#define _TANGY_A_H_

char *skipwhite(char *p);
char *chomp(char *line);
int dellastcharif(char *src, int xch);
char *draw_wordDQ(char *src, char *dst, int wlen);
char *draw_wordW(char *src, char *dst, int wlen);
char *draw_word(char *src, char *dst, int wlen, int sep);
int confirm_objattr(struct obattr xoa);
int confirm_attr(ob *xo);
int dump_objattr(struct obattr xo);
int cha_fprint(FILE *fp, char *msg, ch *tg);
int cha_reset(ch *xch);
int cha_copy(ch *dst, ch *src);
int _ns_dump(ns *s, int w);
int ns_dump(ns *s);
int _ob_dump(ob *s, int w);
int ob_dump(ob *s);
int _ob_gdump(ob *s, int w);
int ob_gdump(ob *s);
int _ob_adump(ob *s, int w);
int ob_adump(ob *s);
int _ob_bldump(ob *s, int w);
int _ob_bgdump(ob *s, int w);
int _ob_cndump(ob *s, int w);
int ob_bldump(ob *s);
int ob_bgdump(ob *s);
int ob_cndump(ob *s);
int _printobjlist(FILE *fp, char *pre, ob *s, int w);
int printobjlist(FILE *fp, char *pre, ob *s);
ns *newnamespace();
ns *newnamespace_child(ns *pns);
int ss_sprintf(char *dst, int dlen, void *xv, int opt);
int segop_sprintf(char *dst, int dlen, void *xv, int opt);
int seg_sprintf(char *dst, int dlen, void *xv, int opt);
ob *newobj();
ob *cloneobj(ob *oo);
ob *newbox();
ob *newchunk();
ob *newchunk_child(ob *pch);
int chs_init();
int chs_dump();
int chs_push(ob *x);
ob *chs_pop();
int nss_init();
int nss_dump();
int nss_push(ns *x);
ns *nss_pop();
int chas_initN(chas *st, int n);
int chas_init(chas *st);
int chas_push(chas *st, ch *src);
int chas_pop(chas *st, ch *dst);
int chas_top(chas *st, ch *dst);
int chadd(ob *xch, ob *xob);
int chdel(ob *xch, ob *xob);
int nsaddobj(ns *xns, ob *xob, char *label);
int nsaddns(ns *xns, ns *xob, char *label);
int nsaddnsobj(ns *xns, ns *nns, ob *xob, char *label);
int splitdot(char *h, int hlen, char *r, int rlen, char *full);
ob *_ns_find_objP(ns *xns, char *xname, int *xx, int *xy);
ob *ns_find_obj(ns *xns, char *xname);
int ch_sprintf(char *dst, int dlen, void *xv, int opt);
int revch(ob *x, ch *ref, int *rx, int *ry);
int _ns_find_objposP(ns *xns, ob *b, char *xname, int pmode, int *rx, int *ry);
int _ns_find_objpos(ns *xns, char *xname, int *rx, int *ry, int pmode);
int ns_find_objpos(ns *xns, char *xname, int *rx, int *ry);
int ns_find_objposG(ns *xns, char *xname, int *rx, int *ry);
ob *_ns_find_objX(ns *xns, char *xname, int *ux, int *uy);
int _ns_find_objposX(ns *xns, char *xname, int *rx, int *ry, int pmode);
int ns_find_objposX(ns *xns, char *xname, int *rx, int *ry);
int ns_find_objposXG(ns *xns, char *xname, int *rx, int *ry);
char *_ns_find_name(ns *s, ob *xob, int w);
int recalcsizeparam();
nb_rec *nb_new();
nb_rec *nb_newpair(char *xk, ob *xt);
int nb_sprintf(char *dst, int dlen, void *xv, int opt);
ob *nb_find_ob(char *xkey);
nf_rec *nf_new();
nf_rec *nf_newfile(char *xfn);
int nf_sprintf(char *dst, int dlen, void *xv, int opt);
int nf_load(FILE *fp);
int nf_loadfn(char *fn);
int nf_registfilename(char *fn);
int nb_regist(char *xkey, ob *xob);
int notefile_load();
int notefile_setup();
seg *seg_new();
int try_regsegclose(varray_t *segar);
int try_regline(varray_t *segar, int x1, int y1, int x2, int y2);
int try_regsegmoveto(varray_t *segar, int x1, int y1);
int try_regsegrmoveto(varray_t *segar, int x1, int y1);
int try_regsegrlineto(varray_t *segar, int x1, int y1);
int try_regsegforward(varray_t *segar, int x1, int y1);
int try_regsegarc(varray_t *segar, int rad, int ang);
int try_regsegarcn(varray_t *segar, int rad, int ang);
int sdump(FILE *fp, char *msg, char *s);
int dellastcr(char *bf);
int trimdoublequote(char *s);
int delfirstchars(char *bf, int w);
int xatoi(char *src);
int gotlabel(char *lab, int lsize, char *line);
char *skiplabel(char *lab, int lsize, char *line);
char *parsetype(int *rot, char *line);
char *parse_segop(char *sin, int dt, ob *nob);
char *parseobjattr(ob *rob, char *src);
ob *parseobj(char *p);
int getcmd(FILE *fp, char *ebuf, int elen);
int aliasprintf(char *dst, int dlen, void *v, int opt);
int alias_add(varray_t *ar, char *xsrc, char *xdst);
char *alias_find(varray_t *ar, char *xsrc);
int try_alias(varray_t *ar, char *orig, char *ns, int nlen);
int parse(FILE *fp, ob *ch0, ns *ns0);
int fparse(char *fn, ob *ch0, ns *ns0);
int dirnormalize(int xxdir);
int rewindcenter(ob *u, int qdir, int *rx, int *ry);
int applywith(ob *u, char *xpos, int *rx, int *ry);
int find_from(ob *xob, int *risx, int *risy);
int find_to_first(ob *xob, int *riex, int *riey);
int find_to_last(ob *xob, int *riex, int *riey);
int est_seg(ns *xns, ob *u, varray_t *opar, varray_t *segar, int kp, int *zdir, int *rlx, int *rby, int *rrx, int *rty, int *rfx, int *rfy);
int takelastobjpos(ob *lob, int pos, int kp, int *nx, int *ny, int *dir);
int OP_GDUMP(const char *pre, char *mid, ob *u);
int OP_LDUMP(const char *pre, char *mid, ob *u);
int insboxpath(varray_t *xar, int xwd, int xht);
int MARK_bcurveself(ob *xu, ns *xns, int *_lx, int *_by, int *_rx, int *_ty);
int MARK_bcurve(ob *xu, ns *xns, int *_lx, int *_by, int *_rx, int *_ty);
int putobj(ob *u, ns *xns, int *gdir);
int fitobj_LBRT(ob *u, int xxdir, int *x, int *y, int *fx, int *fy, ns *xns);
int fitobj_wdht(ob *u, int xxdir, int *x, int *y, ns *xns);
int eval_dir(ob *u, int *xdir);
int bumpH(int x1, int y1, int x2, int y2, int x, int y, int cdir, int *rgx, int *rgy);
int bumpV(int x1, int y1, int x2, int y2, int x, int y, int cdir, int *rgx, int *rgy);
int bump(int x1, int y1, int x2, int y2, int x, int y, int cdir, int *rgx, int *rgy);
int expand_paren(int bx, int by, int w, int h, int ox, int oy, ob *u);
int expand_sep(int bx, int by, int w, int h, int ox, int oy, ob *u);
int _putchunk_lane(ob *xch, int *rx, int *ry, ns *xns);
int _putchunk(ob *xch, int *x, int *y, ns *xns);
int putchunk(ob *xch, int *x, int *y, ns *xns);
int put(ob *xch, int *x, int *y, ns *xns);
int finalizeobj(ob *u, int *xdir, int ox, int oy, ns *xns);
int finalizechunk(ob *xch, int gox, int goy, ns *xns);
int finalize(ob *xch, int x, int y, ns *xns);
int picdraw_arrowhead(int atype, int xdir, int x, int y);
int picdraw_linearrow(int xox, int xoy, ob *xu, ns *xns);
int picdraw_line(int xox, int xoy, ob *xu, ns *xns);
int picdrawobj(ob *u, int *xdir, int ox, int oy, ns *xns);
int picdrawchunk(ob *xch, int gox, int goy, ns *xns);
int picdraw(ob *xch, int x, int y, ns *xns);

#endif/*_TANGY_A_H_*/
